// <auto-generated />
using System;
using ApiContribuinte;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ApiContribuinte.Migrations
{
    [DbContext(typeof(ApiContribuinteContext))]
    partial class ApiContribuinteContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("ApiContribuinte.Models.Cnae", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Codigo")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .HasColumnName("descricao");

                    b.HasKey("Id");

                    b.ToTable("cnae");
                });

            modelBuilder.Entity("ApiContribuinte.Models.CnpjCnae", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("CnaeId")
                        .HasColumnName("cnae");

                    b.Property<int>("ContribuinteId")
                        .HasColumnName("cnpj");

                    b.Property<bool>("Principal")
                        .HasColumnName("principal");

                    b.HasKey("Id");

                    b.HasIndex("CnaeId");

                    b.HasIndex("ContribuinteId");

                    b.ToTable("cnpj_cnae");
                });

            modelBuilder.Entity("ApiContribuinte.Models.Contribuinte", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Bairro")
                        .HasColumnName("bairro");

                    b.Property<string>("Cep")
                        .HasColumnName("cep");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnName("cnpj")
                        .HasMaxLength(14);

                    b.Property<string>("Complemento")
                        .HasColumnName("complemento");

                    b.Property<DateTime>("DataAbertura")
                        .HasColumnName("data_abertura");

                    b.Property<DateTime>("DataSituacaoRfb")
                        .HasColumnName("data_situacao_rfb");

                    b.Property<string>("Email")
                        .HasColumnName("email");

                    b.Property<string>("Fantasia")
                        .HasColumnName("fantasia");

                    b.Property<string>("Logradouro")
                        .HasColumnName("logradouro");

                    b.Property<string>("MotivoSituacaoRfb")
                        .HasColumnName("motivo_situacao_rfb");

                    b.Property<string>("Municipio")
                        .HasColumnName("municipio");

                    b.Property<int>("NaturezaJuridicaId")
                        .HasColumnName("natureza_juridica");

                    b.Property<string>("Numero")
                        .HasColumnName("numero");

                    b.Property<string>("Porte")
                        .HasColumnName("porte");

                    b.Property<string>("RazaoSocial")
                        .HasColumnName("razao_social");

                    b.Property<string>("SituacaoRfb")
                        .HasColumnName("situacao_rfb");

                    b.Property<string>("TipoEmpresa")
                        .HasColumnName("tipo_empresa");

                    b.Property<string>("Uf")
                        .HasColumnName("uf");

                    b.Property<DateTime>("ValidadeConsulta")
                        .HasColumnName("validade_consulta");

                    b.HasKey("Id");

                    b.HasIndex("NaturezaJuridicaId");

                    b.ToTable("cnpj");
                });

            modelBuilder.Entity("ApiContribuinte.Models.NaturezaJuridica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Codigo")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .HasColumnName("descricao");

                    b.HasKey("Id");

                    b.ToTable("natureza_juridica");
                });

            modelBuilder.Entity("ApiContribuinte.Models.Telefone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int>("ContribuinteId")
                        .HasColumnName("cnpj");

                    b.Property<string>("Numero")
                        .HasColumnName("numero");

                    b.HasKey("Id");

                    b.HasIndex("ContribuinteId");

                    b.ToTable("telefone");
                });

            modelBuilder.Entity("ApiContribuinte.Models.CnpjCnae", b =>
                {
                    b.HasOne("ApiContribuinte.Models.Cnae", "Cnae")
                        .WithMany()
                        .HasForeignKey("CnaeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ApiContribuinte.Models.Contribuinte", "Contribuinte")
                        .WithMany("ListaCnae")
                        .HasForeignKey("ContribuinteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ApiContribuinte.Models.Contribuinte", b =>
                {
                    b.HasOne("ApiContribuinte.Models.NaturezaJuridica", "NaturezaJuridica")
                        .WithMany()
                        .HasForeignKey("NaturezaJuridicaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ApiContribuinte.Models.Telefone", b =>
                {
                    b.HasOne("ApiContribuinte.Models.Contribuinte", "Contribuinte")
                        .WithMany("ListaTelefones")
                        .HasForeignKey("ContribuinteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
